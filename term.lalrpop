use std::str::FromStr;
use ast::{Term, Op};

grammar;

pub Term: Box<Term> = {
    "(" <t1:Term> <t2:Term> ")" => Box::new(Term::App(t1, t2)),
    "(" <t1:Term> <op:TermOp> <t2:Term> ")" => Box::new(Term::BinOp(op, t1, t2)),
    "(Î»" <s:r"[a-z]"> ". " <t1:Term> ")" => Box::new(Term::Abs(s.as_bytes()[0], t1)),
    <s:r"[a-z]"> => Box::new(Term::Var(s.as_bytes()[0])),
    <n:r"[0-9]+"> => Box::new(Term::Constant(i32::from_str(n).unwrap())),

}

TermOp: Op = {
    "*" => Op::Mul,
    "/" => Op::Div,
    "+" => Op::Add,
    "-" => Op::Sub,
}
